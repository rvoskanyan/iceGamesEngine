<style>
    table tr {
        vertical-align: center; text-align: center
    }

    table tr:hover {
        background-color: #ededed;
        cursor: pointer;
    }

    table tr th {
        padding: 10px;
        border-bottom: 2px solid #d7d7d7;
    }

    table tr th:not(:first-child) {
        border-left: 1px solid #d7d7d7
    }

    table tr th:not(:last-child) {
        border-right: 1px solid #d7d7d7
    }

    table tr td {
        padding: 5px 10px;
        border-bottom: 2px solid #d7d7d7;
    }

    table tr td:not(:first-child) {
        border-left: 1px solid #d7d7d7
    }

    table tr td:not(:last-child) {
        border-right: 1px solid #d7d7d7
    }
</style>


<table cellpadding="0" cellspacing="0">
    <tr>
        <th>Товар</th>
        <th>Цена закупки</th>
        <th>Кол-во ключей</th>
        <th>Текущая цена продажи</th>
        <th>Цена конкурента + 1%</th>
        <th>ПВП с 1 ед.</th>
        <th>В наличии</th>
        <th>Сумма ПВП</th>
        <th>Продано</th>
        <th>ФВП</th>
    </tr>
    {{#each rows}}
        <tr>
            <td>
                <a href="/admin/products/edit/{{productId}}">{{productName}}</a>
            </td>
            <td>{{purchasePrice}} ₽</td>
            <td>{{countKeys}}</td>
            <td>{{currentSallePrice}} ₽</td>
            <td>{{dsPrice}} ₽</td>
            <td>{{pvpPerSale}} ₽</td>
            <td>{{countInStock}}</td>
            <td>{{pvp}} ₽</td>
            <td>{{countSelling}}</td>
            <td>{{fvp}} ₽</td>
        </tr>
    {{/each}}
    <tr>
        <th style="text-align: end">Итого</th>
        <th></th>
        <th>{{totalCountKeys}}</th>
        <th></th>
        <th></th>
        <th></th>
        <th>{{totalInStockKeys}}</th>
        <th>{{totalPVP}} ₽</th>
        <th>{{totalSellingKeys}}</th>
        <th>{{totalFVP}} ₽</th>
    </tr>
</table>


<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="countSales"></canvas>
</div>
<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="cost"></canvas>
</div>
<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="fvp"></canvas>
</div>
<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="turnover"></canvas>
</div>
<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="countOrders"></canvas>
</div>
<div style="max-width: 800px; max-height: 400px; margin-top: 30px">
    <canvas id="averageCheck"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const countSales = document.getElementById('countSales');
    const cost = document.getElementById('cost');
    const fvp = document.getElementById('fvp');
    const turnover = document.getElementById('turnover');
    const countOrders = document.getElementById('countOrders');
    const averageCheck = document.getElementById('averageCheck');

    const labels = JSON.parse('{"data": {{encodeString labels}} }').data;
    const currentCountSales = JSON.parse('{"data": {{encodeString currentCountSales}} }').data;
    const currentCost = JSON.parse('{"data": {{encodeString currentCost}} }').data;
    const currentFvp = JSON.parse('{"data": {{encodeString currentFvp}} }').data;
    const currentTurnover = JSON.parse('{"data": {{encodeString currentTurnover}} }').data;
    const currentCountOrders = JSON.parse('{"data": {{encodeString currentCountOrders}} }').data;
    const currentAverageCheck = JSON.parse('{"data": {{encodeString currentAverageCheck}} }').data;
    const previousCountSales = JSON.parse('{"data": {{encodeString previousCountSales}} }').data;
    const previousCost = JSON.parse('{"data": {{encodeString previousCost}} }').data;
    const previousFvp = JSON.parse('{"data": {{encodeString previousFvp}} }').data;
    const previousTurnover = JSON.parse('{"data": {{encodeString previousTurnover}} }').data;
    const previousCountOrders = JSON.parse('{"data": {{encodeString previousCountOrders}} }').data;
    const previousAverageCheck = JSON.parse('{"data": {{encodeString previousAverageCheck}} }').data;

    new Chart(countSales, getConfig('Количество продаж', labels, currentCountSales, previousCountSales));
    new Chart(cost, getConfig('Себестоимость', labels, currentCost, previousCost));
    new Chart(fvp, getConfig('ФВП', labels, currentFvp, previousFvp));
    new Chart(turnover, getConfig('Оборот', labels, currentTurnover, previousTurnover));
    new Chart(countOrders, getConfig('Количество заказов', labels, currentCountOrders, previousCountOrders));
    new Chart(averageCheck, getConfig('Средний чек', labels, currentAverageCheck, previousAverageCheck));

    function getConfig(title, labels, currentData, previousData) {
      return {
          type: 'line',
          data: {
              labels: labels,
              datasets: [
                  {
                      label: 'За период в 30 дней',
                      fill: false,
                      backgroundColor: 'rgb(54, 162, 235)',
                      borderColor: 'rgb(54, 162, 235)',
                      data: currentData,
                  },
                  {
                      label: 'За предыдущий период в 30 дней',
                      fill: false,
                      backgroundColor: 'rgb(75, 192, 192)',
                      borderColor: 'rgb(75, 192, 192)',
                      borderDash: [5, 5],
                      data: previousData,
                  },
              ]
          },
          options: {
              responsive: true,
              plugins: {
                  title: {
                      display: true,
                      text: title,
                  },
              },
              interaction: {
                  mode: 'index',
                  intersect: false,
              },
          },
      };
    }
</script>