/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./styles/index.sass":
/*!***************************!*\
  !*** ./styles/index.sass ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack:///./styles/index.sass?");

/***/ }),

/***/ "./js/AsyncForm.js":
/*!*************************!*\
  !*** ./js/AsyncForm.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AsyncForm)\n/* harmony export */ });\n/* harmony import */ var _Postman_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Postman.js */ \"./js/Postman.js\");\n\r\n\r\nclass AsyncForm {\r\n  constructor(options) {\r\n    this.mainNode = options.mainNode;\r\n    this.fields = this.mainNode.querySelectorAll('input');\r\n    this.autoSizeInputNodes = this.mainNode.querySelectorAll('.autoSizeInput');\r\n    this.mainNode.addEventListener('submit', this.handleSubmit);\r\n    this.messageNode = this.mainNode.querySelector('.responseMessage');\r\n    this.successHandler = options.successHandler;\r\n    this.extraParams = options.extraParams || [];\r\n    this.validationMethods = {};\r\n    this.sendParams = {};\r\n    \r\n    this.setValidationMethods = (name) => {\r\n      const errorElemNode = this.mainNode.querySelector(`.js-error-${name}`);\r\n      \r\n      if (this.validationMethods[name]) {\r\n        return;\r\n      }\r\n      \r\n      this.validationMethods[name] = {\r\n        setError: () => {\r\n          errorElemNode.classList.add('error');\r\n        },\r\n        removeError: () => {\r\n          errorElemNode.classList.remove('error');\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.fields.forEach(field => {\r\n      const {\r\n        name,\r\n      } = field;\r\n      \r\n      this.setValidationMethods(name);\r\n    });\r\n  \r\n    this.autoSizeInputNodes.forEach(autoSizeInputNode => {\r\n      const name = autoSizeInputNode.dataset.name;\r\n  \r\n      this.setValidationMethods(name);\r\n    });\r\n    \r\n    this.postman = new _Postman_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n  }\r\n  \r\n  validate = (validErrors) => {\r\n    validErrors.forEach(validError => this.validationMethods[validError].setError());\r\n  }\r\n  \r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    this.fields.forEach(field => {\r\n      const {\r\n        name,\r\n        value,\r\n        type,\r\n        checked,\r\n      } = field;\r\n      \r\n      if (type === 'radio') {\r\n        if (!checked) {\r\n          return;\r\n        }\r\n      }\r\n      \r\n      if (typeof value === 'string' && value.length > 0) {\r\n        this.sendParams[name] = value;\r\n      }\r\n    })\r\n  \r\n    this.autoSizeInputNodes.forEach(autoSizeInputNode => {\r\n      const name = autoSizeInputNode.dataset.name;\r\n      const value = autoSizeInputNode.querySelector('.value').innerText;\r\n  \r\n      if (typeof value === 'string' && value.length > 0) {\r\n        this.sendParams[name] = value;\r\n      }\r\n    })\r\n  \r\n    this.extraParams.forEach(extraParam => {\r\n      const value = this.mainNode.dataset[extraParam];\r\n      \r\n      if (typeof value === 'string' && value.length > 0) {\r\n        this.sendParams[extraParam] = value;\r\n      }\r\n    })\r\n    \r\n    const response = await this.postman.post(this.mainNode.action, this.sendParams);\r\n    const result = await response.json();\r\n    \r\n    if (result.validErrors) {\r\n      this.validate(result.validErrors);\r\n    }\r\n  \r\n    if (!result.error && this.successHandler) {\r\n      this.successHandler(this.sendParams);\r\n    }\r\n    \r\n    if (!this.messageNode) {\r\n      return;\r\n    }\r\n    \r\n    if (result.error) {\r\n      this.messageNode.classList.add('error');\r\n    } else {\r\n      this.messageNode.classList.remove('error');\r\n    }\r\n    \r\n    this.messageNode.innerText = result.message;\r\n  }\r\n}\n\n//# sourceURL=webpack:///./js/AsyncForm.js?");

/***/ }),

/***/ "./js/Modal.js":
/*!*********************!*\
  !*** ./js/Modal.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Modal)\n/* harmony export */ });\nclass Modal {\r\n  constructor(contentNode) {\r\n    this.body = document.querySelector('body');\r\n    this.mainNode = document.createElement('div');\r\n    this.modalContainer = document.createElement('div');\r\n    this.closeBtn = document.createElement('button');\r\n    this.modalContent = document.createElement('div');\r\n    \r\n    this.mainNode.classList.add('modal');\r\n    this.modalContainer.classList.add('modalContainer');\r\n    this.closeBtn.classList.add('btn', 'close');\r\n    this.modalContent.classList.add('modalContent');\r\n    \r\n    this.modalContainer.addEventListener('click', this.close);\r\n    this.closeBtn.addEventListener('click', this.close);\r\n    \r\n    this.modalContent.append(contentNode);\r\n    this.closeBtn.innerText = 'X'\r\n    this.modalContainer.append(this.closeBtn);\r\n    this.modalContainer.append(this.modalContent);\r\n    this.mainNode.append(this.modalContainer);\r\n  \r\n    this.body.prepend(this.mainNode);\r\n    this.body.classList.add('noScrolling');\r\n  }\r\n  \r\n  close = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.mainNode.remove();\r\n      this.body.classList.remove('noScrolling');\r\n    }\r\n  }\r\n}\n\n//# sourceURL=webpack:///./js/Modal.js?");

/***/ }),

/***/ "./js/PopupController.js":
/*!*******************************!*\
  !*** ./js/PopupController.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PopupController)\n/* harmony export */ });\nclass PopupController {\r\n  static #instance = null;\r\n  \r\n  constructor(popups) {\r\n    if (PopupController.#instance) {\r\n      return PopupController.#instance;\r\n    }\r\n  \r\n    PopupController.#instance = this;\r\n    \r\n    this.popupNodes = [];\r\n    this.openedIndex = null;\r\n    this.currentActiveStateNode = null;\r\n    this.bodyNode = document.querySelector('body');\r\n    \r\n    popups.forEach((item) => {\r\n      const popupNode = document.querySelector(item.popupSelector);\r\n      const btnNode = document.querySelector(item.btnSelector);\r\n      \r\n      if (!popupNode || !btnNode) {\r\n        return;\r\n      }\r\n      \r\n      if (item.states?.length) {\r\n        item.states.forEach(item => {\r\n          const btnActiveStateNode = popupNode.querySelector(item.btnSelector);\r\n          const blockStateNode = popupNode.querySelector(item.blockSelector);\r\n          \r\n          if (item.isDefault) {\r\n            this.currentActiveStateNode = blockStateNode;\r\n          }\r\n          \r\n          btnActiveStateNode.addEventListener('click', () => {\r\n            if (this.currentActiveStateNode !== blockStateNode) {\r\n              this.currentActiveStateNode.classList.remove('active');\r\n              blockStateNode.classList.add('active');\r\n              \r\n              this.currentActiveStateNode = blockStateNode;\r\n            }\r\n          })\r\n        })\r\n      }\r\n      \r\n      this.popupNodes.push({\r\n        id: item.id,\r\n        popupNode,\r\n        btnNode,\r\n      });\r\n      \r\n      const index = this.popupNodes.length - 1;\r\n  \r\n      btnNode.addEventListener('click', () => {\r\n        this.handleOpenPopup(index);\r\n      })\r\n    });\r\n  }\r\n  \r\n  activateById = (id) => {\r\n    const index = this.popupNodes.findIndex(item => item.id === id);\r\n    \r\n    if (index === -1 || index === this.openedIndex) {\r\n      return;\r\n    }\r\n    \r\n    this.openPopup(index);\r\n  }\r\n  \r\n  handleOpenPopup = (index) => {\r\n    if (this.openedIndex === index) {\r\n      return this.closePopup(this.openedIndex);\r\n    }\r\n    \r\n    if (this.openedIndex !== null) {\r\n      this.closePopup(this.openedIndex);\r\n    }\r\n  \r\n    this.openPopup(index);\r\n  }\r\n  \r\n  openPopup = (index) => {\r\n    const popupNode = this.popupNodes[index].popupNode;\r\n    const btnNode = this.popupNodes[index].btnNode;\r\n  \r\n    this.openedIndex = index;\r\n    this.bodyNode.classList.add('noScrolling');\r\n    \r\n    popupNode.classList.add('active');\r\n    btnNode.classList.add('active');\r\n  \r\n    document.removeEventListener('click', this.docClickListener);\r\n    \r\n    this.docClickListener = (e) => {\r\n      if (!popupNode.contains(e.target) && !btnNode.contains(e.target)) {\r\n        this.closePopup(index);\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('click', this.docClickListener);\r\n  }\r\n  \r\n  closePopup = (index) => {\r\n    this.popupNodes[index].popupNode.classList.remove('active');\r\n    this.popupNodes[index].btnNode.classList.remove('active');\r\n    \r\n    this.openedIndex = null;\r\n    this.bodyNode.classList.remove('noScrolling');\r\n    \r\n    document.removeEventListener('click', this.docClickListener);\r\n  }\r\n}\n\n//# sourceURL=webpack:///./js/PopupController.js?");

/***/ }),

/***/ "./js/Postman.js":
/*!***********************!*\
  !*** ./js/Postman.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Postman)\n/* harmony export */ });\nclass Postman {\r\n  static #instance = null;\r\n  \r\n  constructor() {\r\n    if (Postman.#instance) {\r\n      return Postman.#instance;\r\n    }\r\n    \r\n    Postman.#instance = this;\r\n  }\r\n  \r\n  get = (url, params) => {\r\n    const newUrl = new URL(url);\r\n  \r\n    params && Object.entries(params).forEach(([key, value]) => {\r\n      newUrl.searchParams.append(key, value);\r\n    });\r\n    \r\n    return this.query({\r\n      url: newUrl,\r\n      method: 'GET',\r\n    });\r\n  }\r\n  \r\n  post = (url, params) => {\r\n    return this.query({\r\n      url,\r\n      params,\r\n      method: 'POST',\r\n    });\r\n  }\r\n  \r\n  put = (url, params) => {\r\n    return this.query({\r\n      url,\r\n      params,\r\n      method: 'PUT',\r\n    });\r\n  }\r\n  \r\n  delete = (url) => {\r\n    return this.query({\r\n      url,\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n  \r\n  query = (options) => {\r\n    const {\r\n      url,\r\n      method,\r\n      params = {},\r\n    } = options;\r\n    \r\n    const init = {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n    }\r\n    \r\n    if (method !== 'GET') {\r\n      init.body = JSON.stringify(params);\r\n    }\r\n  \r\n    return fetch(url, init);\r\n  }\r\n}\n\n//# sourceURL=webpack:///./js/Postman.js?");

/***/ }),

/***/ "./js/Prompt.js":
/*!**********************!*\
  !*** ./js/Prompt.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {\r\n  constructor(options) {\r\n    this.mainNode = options.mainNode;\r\n    this.blockNode = this.mainNode.querySelector('.js-promptBlock');\r\n    this.openNode = this.mainNode.querySelector('.js-promptOpen');\r\n    this.closeNode = this.mainNode.querySelector('.js-promptClose');\r\n    \r\n    this.openNode.addEventListener('click', this.open);\r\n    this.closeNode.addEventListener('click', this.close);\r\n  }\r\n  \r\n  open = () => {\r\n    this.blockNode.classList.add('active');\r\n  }\r\n  \r\n  close = () => {\r\n    this.blockNode.classList.remove('active');\r\n  }\r\n});\n\n//# sourceURL=webpack:///./js/Prompt.js?");

/***/ }),

/***/ "./js/Slider.js":
/*!**********************!*\
  !*** ./js/Slider.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Slider)\n/* harmony export */ });\nclass Slider {\r\n  constructor(options) {\r\n    const {\r\n      mainNode,\r\n      switchingTime,\r\n      isTrack,\r\n      isVertical,\r\n      progress,\r\n      navigate,\r\n      countSlidesScroll = 1,\r\n      onSwitch,\r\n    } = options;\r\n  \r\n    this.switchingTime = switchingTime;\r\n    this.isTrack = isTrack;\r\n    this.isVertical = isVertical;\r\n    this.progress = progress;\r\n    this.navigate = navigate;\r\n    this.countSlidesScroll = countSlidesScroll;\r\n    this.onSwitch = onSwitch;\r\n    this.activeScreen = 0;\r\n    this.countVisibleSlides = 1;\r\n    this.timeOutId = null;\r\n    this.offsetSlide = 0;\r\n  \r\n    this.mainNode = mainNode;\r\n    this.prevBtnNode = this.mainNode.querySelector('.js-prevBtn');\r\n    this.nextBtnNode = this.mainNode.querySelector('.js-nextBtn');\r\n    this.tapeNode = this.mainNode.querySelector('.js-tape');\r\n    this.slideNodes = this.mainNode.querySelectorAll('.js-slide');\r\n    \r\n    this.countSlides = this.slideNodes.length;\r\n    this.countScreens = this.countSlides;\r\n    \r\n    if (this.isTrack) {\r\n      const stylesSlide = getComputedStyle(this.slideNodes[0]);\r\n      this.visibleAreaNode = this.mainNode.querySelector('.js-visibleArea');\r\n      \r\n      this.shareSlide = this.slideNodes[0].offsetWidth + parseInt(stylesSlide.marginLeft) + parseInt(stylesSlide.marginRight);\r\n      this.shareVisibleArea = this.visibleAreaNode.offsetWidth;\r\n      this.positionTape = 0;\r\n      \r\n      if (this.isVertical) {\r\n        this.shareSlide = this.slideNodes[0].offsetHeight + parseInt(stylesSlide.marginTop) + parseInt(stylesSlide.marginBottom);\r\n        this.shareVisibleArea = this.visibleAreaNode.offsetHeight;\r\n      }\r\n      \r\n      this.countVisibleSlides = this.shareVisibleArea / this.shareSlide;\r\n      \r\n      if (this.countSlidesScroll > this.countVisibleSlides) {\r\n        this.countSlidesScroll = this.countVisibleSlides;\r\n      }\r\n      \r\n      this.countScreens = Math.ceil((this.countSlides - (this.countVisibleSlides - this.countSlidesScroll)) / this.countSlidesScroll);\r\n    }\r\n  \r\n    if (this.progress) {\r\n      this.shareProgress = 100 / this.countScreens;\r\n      this.progressNode = this.mainNode.querySelector('.js-progress');\r\n      this.progressNode.style.setProperty('--share', `${this.shareProgress}%`);\r\n      this.progressNode.style.setProperty('--progress', `0%`);\r\n    }\r\n  \r\n    if (this.navigate) {\r\n      this.navigateItemNodes = this.mainNode.querySelectorAll('.js-itemNavigate');\r\n      \r\n      this.navigateItemNodes.forEach((item, index) => {\r\n        item.addEventListener('click', () => this.switchScreen(index));\r\n      })\r\n    }\r\n  \r\n    if (this.onSwitch) {\r\n      this.onSwitch([this.slideNodes[0]]);\r\n    }\r\n  \r\n    if (this.switchingTime) {\r\n      this.timeOutId = setTimeout(() => {\r\n        this.switchScreen(this.activeScreen + 1);\r\n      }, this.switchingTime);\r\n    }\r\n    \r\n    this.prevBtnNode.addEventListener('click', () => this.switchScreen(this.activeScreen - 1));\r\n    this.nextBtnNode.addEventListener('click', () => this.switchScreen(this.activeScreen + 1));\r\n  \r\n    /*switch (this.type) {\r\n      case 'switchClass': {\r\n        this.handleSwitch = this.getSwitcher(this.switchClass);\r\n        this.tapeNode = true;\r\n        if (this.navigateInitial) {\r\n          this.navNodes.forEach((item, index) => item.addEventListener('click', () => this.handleSwitch(index)));\r\n        }\r\n        this.nextBtnNode.addEventListener('click', () => this.handleSwitch(this.slideActive + this.slideScroll));\r\n        this.prevBtnNode.addEventListener('click', () => this.handleSwitch(this.slideActive - this.slideScroll));\r\n        break;\r\n      }\r\n      case 'track': {\r\n        //this.tape.addEventListener('mousedown', this.moveTape);\r\n        this.widthSlide = this.visibleAreaNode.offsetWidth / this.countVisibleSlides;\r\n        this.slidesNodes.forEach(item => item.style.width = `${this.widthSlide}px`);\r\n        this.positionTape = 0;\r\n        this.handleSwitch = this.getSwitcher(this.trackSwitch);\r\n        break;\r\n      }\r\n      case 'verticalTrack': {\r\n        this.heightSlide = this.visibleAreaNode.offsetHeight / this.countVisibleSlides;\r\n        this.slidesNodes.forEach(item => item.style.height = `${this.heightSlide}px`);\r\n        this.positionTape = 0;\r\n        this.handleSwitch = this.getSwitcher(this.verticalTrackSwitch);\r\n        break;\r\n      }\r\n    }*/\r\n  }\r\n  \r\n  switchScreen = (targetScreen) => {\r\n    const prevScreen = this.activeScreen;\r\n    \r\n    this.activeScreen = targetScreen;\r\n    \r\n    if (targetScreen >= this.countScreens) {\r\n      this.activeScreen = 0;\r\n    }\r\n    \r\n    if (targetScreen < 0) {\r\n      this.activeScreen = this.countScreens - 1;\r\n    }\r\n  \r\n    const prevSlides = this.setActiveClass(prevScreen, 'remove');\r\n    const slides = this.setActiveClass(this.activeScreen, 'add');\r\n    \r\n    if (this.progress) {\r\n      this.progressNode.style.setProperty('--progress', `${this.shareProgress * (this.activeScreen)}%`);\r\n    }\r\n  \r\n    if (this.onSwitch) {\r\n      this.onSwitch(slides, prevSlides);\r\n    }\r\n    \r\n    if (this.isTrack) {\r\n      this.moveTape(prevScreen);\r\n    }\r\n  \r\n    clearTimeout(this.timeOutId);\r\n  \r\n    if (this.switchingTime) {\r\n      this.timeOutId = setTimeout(() => {\r\n        this.switchScreen(this.activeScreen + 1);\r\n      }, this.switchingTime);\r\n    }\r\n  }\r\n  \r\n  setActiveClass = (screen, action) => {\r\n    let start = screen * this.countVisibleSlides - this.offsetSlide;\r\n    let end = screen * this.countVisibleSlides + this.countVisibleSlides - this.offsetSlide;\r\n    const members = [];\r\n    \r\n    if (this.activeScreen === 0 && this.offsetSlide) {\r\n      this.offsetSlide = 0;\r\n    }\r\n    \r\n    if (this.isTrack && end > this.countSlides) {\r\n      this.offsetSlide = end - this.countSlides;\r\n      start -= this.offsetSlide;\r\n      end = this.countSlides;\r\n    }\r\n  \r\n    if (this.navigate) {\r\n      this.navigateItemNodes[screen].classList[action]('active');\r\n      this.navigateItemNodes[screen].blur();\r\n    }\r\n    \r\n    while (start < end) {\r\n      const slide = this.slideNodes[start];\r\n      \r\n      members.push(slide);\r\n      slide.classList[action]('active');\r\n      start++;\r\n    }\r\n    \r\n    return members;\r\n  }\r\n  \r\n  moveTape = (prevScreen) => {\r\n    if (this.activeScreen > prevScreen) {\r\n      if (this.activeScreen + 1 === this.countScreens) {\r\n        this.positionTape = ((this.countSlides - this.countVisibleSlides) * this.shareSlide) * -1;\r\n      } else {\r\n        this.positionTape -= this.countVisibleSlides * this.shareSlide;\r\n      }\r\n    } else {\r\n      if (this.activeScreen === 0) {\r\n        this.positionTape = 0;\r\n      } else {\r\n        this.positionTape += this.countVisibleSlides * this.shareSlide;\r\n      }\r\n    }\r\n    \r\n    if (this.isVertical) {\r\n      return this.tapeNode.style.transform = `translateY(${this.positionTape}px)`;\r\n    }\r\n  \r\n    this.tapeNode.style.transform = `translateX(${this.positionTape}px)`;\r\n  }\r\n  \r\n  changeTimeoutOnce = (time) => {\r\n    clearTimeout(this.timeOutId);\r\n    this.timeOutId = setTimeout(() => {\r\n      this.switchScreen(this.activeScreen + 1);\r\n    }, time);\r\n  }\r\n  \r\n  /*moveTape = (click) => {\r\n    const targetClick = click.pageX;\r\n    \r\n    let translateX = 0;\r\n    let moveX = 0;\r\n    \r\n    document.onmousemove = (e) => {\r\n      moveX = e.pageX;\r\n      translateX = moveX - targetClick + this.positionSliders;\r\n      this.tape.style.transform = `translate(${translateX}px, 0)`;\r\n      this.tape.classList.add('moving');\r\n    }\r\n    \r\n    this.tape.onmouseup = () => {\r\n      document.onmousemove = null;\r\n      this.tape.onmouseup = null;\r\n      this.tape.mouseout = null;\r\n      this.tape.classList.remove('moving');\r\n      \r\n      if (moveX === 0) {\r\n        this.tape.style.transform = `translate(${this.positionSliders}px, 0)`;\r\n        return;\r\n      }\r\n      \r\n      if (targetClick - moveX > 29) {\r\n        this.trackSwitch(this.slideActive + 1);\r\n        return;\r\n      }\r\n      \r\n      if (targetClick - moveX < -29) {\r\n        this.trackSwitch(this.slideActive - 1);\r\n        return;\r\n      }\r\n      \r\n      this.tape.style.transform = `translate(${this.positionSliders}px, 0)`;\r\n    }\r\n    \r\n    this.tape.onmouseout = () => {\r\n      document.onmousemove = null;\r\n      this.tape.onmouseup = null;\r\n      this.tape.mouseout = null;\r\n      this.tape.classList.remove('moving');\r\n      \r\n      if (targetClick - moveX > 29) {\r\n        this.trackSwitch(this.slideActive + 1);\r\n        return;\r\n      }\r\n      \r\n      if (targetClick - moveX < -29) {\r\n        this.trackSwitch(this.slideActive - 1);\r\n        return;\r\n      }\r\n      \r\n      this.tape.style.transform = `translate(${this.positionSliders}px, 0)`;\r\n    }\r\n  }*/\r\n}\n\n//# sourceURL=webpack:///./js/Slider.js?");

/***/ }),

/***/ "./js/Tabs.js":
/*!********************!*\
  !*** ./js/Tabs.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tabs)\n/* harmony export */ });\nclass Tabs {\r\n  constructor(options) {\r\n    const {\r\n      mainNode,\r\n    } = options;\r\n    \r\n    this.mainNode = mainNode;\r\n    this.tabBtnNodes = this.mainNode.querySelectorAll('.js-tabBtn');\r\n    this.activeTabBtnNode = this.tabBtnNodes[0];\r\n    \r\n    this.tabBtnNodes.forEach(item => {\r\n      item.addEventListener('click', this.switchTab)\r\n    });\r\n  }\r\n  \r\n  switchTab = (e) => {\r\n    const targetNode = e.target;\r\n    \r\n    if (this.activeTabBtnNode === targetNode) {\r\n      return;\r\n    }\r\n    \r\n    const fromTabId = this.activeTabBtnNode.dataset.targetId;\r\n    const toTabId = targetNode.dataset.targetId;\r\n    \r\n    this.activeTabBtnNode.classList.remove('active');\r\n    targetNode.classList.add('active');\r\n  \r\n    this.activeTabBtnNode = targetNode;\r\n    \r\n    this.mainNode.querySelector(`.js-tabBlock-${fromTabId}`).classList.remove('active');\r\n    this.mainNode.querySelector(`.js-tabBlock-${toTabId}`).classList.add('active');\r\n  }\r\n}\n\n//# sourceURL=webpack:///./js/Tabs.js?");

/***/ }),

/***/ "./js/config.js":
/*!**********************!*\
  !*** ./js/config.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"websiteAddress\": () => (/* binding */ websiteAddress)\n/* harmony export */ });\n//export const websiteAddress = 'http://141.8.194.196:4000/';\r\nconst websiteAddress = 'http://localhost:4000/';\n\n//# sourceURL=webpack:///./js/config.js?");

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Slider.js */ \"./js/Slider.js\");\n/* harmony import */ var _Tabs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tabs.js */ \"./js/Tabs.js\");\n/* harmony import */ var _Modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Modal.js */ \"./js/Modal.js\");\n/* harmony import */ var _PopupController_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PopupController.js */ \"./js/PopupController.js\");\n/* harmony import */ var _AsyncForm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AsyncForm.js */ \"./js/AsyncForm.js\");\n/* harmony import */ var _Prompt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Prompt.js */ \"./js/Prompt.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"./js/utils.js\");\n/* harmony import */ var _Postman_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Postman.js */ \"./js/Postman.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./config.js */ \"./js/config.js\");\n/* harmony import */ var _styles_index_sass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../styles/index.sass */ \"./styles/index.sass\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst postman = new _Postman_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\r\n\r\nconst homeSliderNode = document.querySelector('.js-homeSlider');\r\nconst homeCatalogTabsNode = document.querySelector('.js-homeCatalogTabs');\r\nconst genresSliderNode = document.querySelector('.js-genresSlider');\r\nconst gameGallerySliderNode = document.querySelector('.js-gameGallerySlider');\r\nconst gameInfoTabsNode = document.querySelector('.js-gameInfoTabs');\r\nconst feedbackProductTabsNode = document.querySelector('.js-feedbackProductTabs');\r\nconst youtubePlayNodes = document.querySelectorAll('.js-playYouTubeVideo');\r\nconst catalogNode = document.querySelector('.js-catalog');\r\nconst loginFormNode = document.querySelector('.js-loginForm');\r\nconst profileEditFormNode = document.querySelector('.js-profileEditForm');\r\nconst submitLoginNode = document.querySelector('.js-submitLoginForm');\r\nconst btnSwitchAuthNode = document.querySelector('.js-btnSwitchAuth');\r\nconst btnSwitchRegNode = document.querySelector('.js-btnSwitchReg');\r\nconst inputLabelInFieldNodes = document.querySelectorAll('.js-inputLabelInField');\r\nconst promptNodes = document.querySelectorAll('.js-prompt');\r\nconst scrollerNode = document.querySelector('.js-scroller');\r\nconst likeArticleNode = document.querySelector('.js-likeArticle');\r\nconst copyBtnNode = document.querySelector('.js-copyBtn');\r\nconst searchStringNode = document.querySelector('.js-searchString');\r\nconst productCards = document.querySelectorAll('.js-cardGame');\r\nconst cartNode = document.querySelector('.js-cart');\r\nconst collapseNodes = document.querySelectorAll('.js-collapse');\r\nconst autoSizeInputNodes = document.querySelectorAll('.js-autoSizeInput');\r\nconst addReviewFormNode = document.querySelector('.js-addReviewForm');\r\nconst commentProductFormNode = document.querySelector('.js-commentProductForm');\r\nconst gamePageNode = document.querySelector('.js-gamePage');\r\nconst rangeNode = document.querySelector('.js-range');\r\nconst popupController = new _PopupController_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]([\r\n  {\r\n    id: 'loginFrom',\r\n    btnSelector: '.js-openLogin',\r\n    popupSelector: '.js-login',\r\n    states: [\r\n      {\r\n        btnSelector: '.js-btnBackLogin',\r\n        blockSelector: '.js-loginFormContainer',\r\n        isDefault: true,\r\n      },\r\n      {\r\n        btnSelector: '.js-btnRestore',\r\n        blockSelector: '.js-restoreFomContainer',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'navigate',\r\n    btnSelector: '.js-toggleMainNavigation',\r\n    popupSelector: '.js-mainNavigation',\r\n  }\r\n]);\r\n\r\nif (rangeNode) {\r\n  const rangeWidth = parseFloat(getComputedStyle(rangeNode).width);\r\n  const min = +rangeNode.dataset.min;\r\n  const max = +rangeNode.dataset.max;\r\n  const minSliderNode = rangeNode.querySelector('.js-minSlider');\r\n  const maxSliderNode = rangeNode.querySelector('.js-maxSlider');\r\n  const initialSliders = () => {\r\n    let minSliderValue = +minSliderNode.innerText;\r\n    let maxSliderValue = +maxSliderNode.innerText;\r\n    \r\n    if (minSliderValue > maxSliderValue) {\r\n      const saveMin = minSliderValue;\r\n      \r\n      minSliderValue = maxSliderValue\r\n      maxSliderValue = saveMin;\r\n  \r\n      minSliderNode.style.zIndex = '0';\r\n      maxSliderNode.style.zIndex = '1';\r\n      activeSlide = maxSliderNode;\r\n    }\r\n    \r\n    if (minSliderValue < min) {\r\n      minSliderValue = min;\r\n    }\r\n    \r\n    if (maxSliderValue > max) {\r\n      maxSliderValue = max;\r\n    }\r\n  \r\n    minSliderNode.style.left = `${(minSliderValue - min) / step}px`;\r\n    maxSliderNode.style.left = `${(maxSliderValue - min) / step}px`;\r\n    minSliderNode.innerText = minSliderValue;\r\n    maxSliderNode.innerText = maxSliderValue;\r\n    minSliderNode.dispatchEvent(new Event('initialSlider'));\r\n    maxSliderNode.dispatchEvent(new Event('initialSlider'));\r\n  }\r\n  \r\n  let maxSliderValue = +maxSliderNode.innerText;\r\n  let activeSlide = null;\r\n  \r\n  maxSliderNode.innerText = max;\r\n  \r\n  const maxSliderMaxValueWidth = parseFloat(getComputedStyle(maxSliderNode).width);\r\n  const step = (max - min) / (rangeWidth - maxSliderMaxValueWidth);\r\n  \r\n  maxSliderNode.innerText = maxSliderValue;\r\n  \r\n  initialSliders();\r\n  \r\n  maxSliderNode.addEventListener('mousedown', listenerMousedownSlider);\r\n  minSliderNode.addEventListener('mousedown', listenerMousedownSlider);\r\n  \r\n  maxSliderNode.addEventListener('startInitial', initialSliders);\r\n  minSliderNode.addEventListener('startInitial', initialSliders);\r\n  \r\n  async function listenerMousedownSlider(e) {\r\n    if (e.target === document.activeElement) {\r\n      return;\r\n    }\r\n    \r\n    e.preventDefault();\r\n    let holder = false;\r\n    \r\n    await new Promise(resolve => {\r\n      const timeout = setTimeout(() => {\r\n        holder = true;\r\n        e.target.removeEventListener('mouseup', listenerMouseup);\r\n        resolve();\r\n      }, 150);\r\n      \r\n      e.target.addEventListener('mouseup', listenerMouseup);\r\n  \r\n      function listenerMouseup () {\r\n        clearTimeout(timeout);\r\n        const range = document.createRange();\r\n        const sel = window.getSelection();\r\n        const sliderNode = e.target;\r\n        const inputSlider = (e) => {\r\n          if (e.key === 'Enter') {\r\n            e.returnValue = false;\r\n            return sliderNode.blur();\r\n          }\r\n          \r\n          const value = parseInt(sliderNode.innerText) || 0;\r\n          const num = parseInt(e.key);\r\n      \r\n          if ((num !== 0 && !num) || !(value <= max)) {\r\n            e.returnValue = false;\r\n        \r\n            if (e.preventDefault) {\r\n              e.preventDefault();\r\n            }\r\n          }\r\n      \r\n          if (sliderNode.innerText[0] === '0') {\r\n            sliderNode.innerText = sliderNode.innerText.replace(/^0+/, '');\r\n          }\r\n        }\r\n        const blurSlider = () => {\r\n          initialSliders();\r\n          e.target.removeEventListener('mouseup', listenerMouseup);\r\n          e.target.removeEventListener('blur', blurSlider);\r\n          sliderNode.removeAttribute('contenteditable');\r\n        }\r\n    \r\n        sliderNode.setAttribute('contenteditable', '');\r\n        range.selectNodeContents(sliderNode);\r\n        range.collapse(false);\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n        sliderNode.addEventListener('keypress', inputSlider);\r\n        sliderNode.addEventListener('blur', blurSlider);\r\n        resolve();\r\n      }\r\n    });\r\n    \r\n    if (!holder) {\r\n      return;\r\n    }\r\n  \r\n    const cursorStartPosition = e.pageX;\r\n    const sliderStartPosition = parseInt(getComputedStyle(e.target).left);\r\n    const sliderNode = e.target;\r\n    const listenerMousemove = (e) => {\r\n      moveSlider(e, sliderNode, cursorStartPosition, sliderStartPosition);\r\n    }\r\n    const listenerMouseup = () => {\r\n      document.removeEventListener('mousemove', listenerMousemove);\r\n      document.removeEventListener('mouseup', listenerMouseup);\r\n      sliderNode.dispatchEvent(new Event('blur'));\r\n      initialSliders();\r\n      sliderNode.style.cursor = 'initial';\r\n    }\r\n  \r\n    sliderNode.style.cursor = 'pointer';\r\n  \r\n    document.addEventListener('mousemove', listenerMousemove);\r\n    document.addEventListener('mouseup', listenerMouseup);\r\n  \r\n    if (activeSlide) {\r\n      activeSlide.style.zIndex = '0';\r\n    }\r\n  \r\n    sliderNode.style.zIndex = '1';\r\n    activeSlide = sliderNode;\r\n  }\r\n  \r\n  function moveSlider(e, sliderNode, cursorStartPosition, currentPositionSlider) {\r\n    const offset = e.pageX - cursorStartPosition;\r\n    const sliderWidth = parseFloat(getComputedStyle(sliderNode).width);\r\n    let position = offset + currentPositionSlider;\r\n    let sliderValue = Math.round(position * step + min);\r\n    \r\n    if (position > rangeWidth - sliderWidth) {\r\n      position = rangeWidth - sliderWidth;\r\n      sliderValue = max;\r\n    }\r\n    \r\n    if (position < 0) {\r\n      position = 0;\r\n      sliderValue = min;\r\n    }\r\n  \r\n    sliderNode.style.left = `${position}px`;\r\n    sliderNode.innerText = sliderValue;\r\n  }\r\n}\r\n\r\nif (gamePageNode) {\r\n  const addToCartBtnNode = gamePageNode.querySelector('.js-addToCartBtn');\r\n  \r\n  addToCartBtnNode.addEventListener('click', async () => {\r\n    if (addToCartBtnNode.classList.contains('js-active')) {\r\n      window.location.href = '/cart';\r\n      return;\r\n    }\r\n    \r\n    const dsCartId = document.querySelector('body').dataset.dsCartId;\r\n    const formData = new FormData();\r\n    const dsId = addToCartBtnNode.dataset.dsId;\r\n    const productId = addToCartBtnNode.dataset.productId;\r\n    \r\n    formData.append('product_id', dsId);\r\n    formData.append('product_cnt', '1');\r\n    formData.append('typecurr', 'wmr');\r\n    formData.append('lang', 'ru-RU');\r\n    \r\n    if (dsCartId) {\r\n      formData.append('cart_uid', dsCartId);\r\n    }\r\n    \r\n    const responseAddCartDS = await fetch('https://shop.digiseller.ru/xml/shop_cart_add.asp', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.urlEncodeFormData)(formData),\r\n    });\r\n    \r\n    const resultAddCartDS = await responseAddCartDS.json();\r\n    \r\n    if (resultAddCartDS.cart_err_num !== '0') {\r\n      return;\r\n    }\r\n    \r\n    const response = await postman.post(`/api/products/${productId}/cart`, {dsCartId: resultAddCartDS.cart_uid});\r\n    const result = await response.json();\r\n    \r\n    if (result.error) {\r\n      return;\r\n    }\r\n    \r\n    if (!dsCartId) {\r\n      document.querySelector('body').dataset.dsCartId = resultAddCartDS.cart_uid;\r\n    }\r\n    \r\n    addToCartBtnNode.innerText = 'В корзине ✔';\r\n    addToCartBtnNode.classList.add('js-active');\r\n    addToCartBtnNode.setAttribute('title', 'Перейти в корзину покупок');\r\n  })\r\n}\r\n\r\nif (autoSizeInputNodes) {\r\n  autoSizeInputNodes.forEach(autoSizeInput => {\r\n    const valueNode = autoSizeInput.querySelector('.js-value');\r\n    \r\n    valueNode.addEventListener('input', () => {\r\n      const isInputActive = autoSizeInput.classList.contains('active');\r\n      const isAddActive = !!valueNode.innerText.length;\r\n      \r\n      if (isAddActive && isInputActive) {\r\n        return;\r\n      }\r\n      \r\n      if (isAddActive && !isInputActive) {\r\n        return autoSizeInput.classList.add('active');\r\n      }\r\n  \r\n      autoSizeInput.classList.remove('active');\r\n    })\r\n  })\r\n}\r\n\r\nif (commentProductFormNode) {\r\n  const loadMoreCommentBtnNode = document.querySelector('.js-loadMoreCommentBtn');\r\n  const listCommentsNode = document.querySelector('.js-listComments');\r\n  const subjectId = commentProductFormNode.dataset.subjectId;\r\n  const ref = commentProductFormNode.dataset.ref;\r\n  let skip = +commentProductFormNode.dataset.skip;\r\n  \r\n  new _AsyncForm_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\r\n    mainNode: commentProductFormNode,\r\n    extraParams: ['subjectId', 'ref'],\r\n    successHandler: (params) => {\r\n      const userName = listCommentsNode.dataset.userName;\r\n      const commentFieldNode = commentProductFormNode.querySelector('.js-autoSizeInput');\r\n      const commentValueNode = commentFieldNode.querySelector('.js-value');\r\n  \r\n      commentValueNode.innerText = '';\r\n      commentValueNode.dispatchEvent(new Event('input'));\r\n      \r\n  \r\n      listCommentsNode.innerHTML = `\r\n        <div class=\"item comment\">\r\n            <div class=\"head\">\r\n                <a class=\"btn link\" href=\"/profile/view/${userName}\" title=\"Перейти в профиль пользователя ${userName}\">${userName}</a>\r\n                <!--<div class=\"reactions\">\r\n                    <button class=\"btn active positive\">\r\n                        <span class=\"icon icon-thumbsUp\"></span> 54\r\n                    </button>\r\n                    <button class=\"btn negative\">\r\n                        <span class=\"icon icon-thumbsDown\"></span> 31\r\n                    </button>\r\n                </div>-->\r\n            </div>\r\n            <div class=\"text\">\r\n                ${params.text}\r\n            </div>\r\n            <!--<button class=\"btn link action\">Ответить</button>-->\r\n        </div>\r\n      ` + listCommentsNode.innerHTML;\r\n    }\r\n  });\r\n  \r\n  if (loadMoreCommentBtnNode) {\r\n    loadMoreCommentBtnNode.addEventListener('click', async () => {\r\n      const response = await postman.get(`${_config_js__WEBPACK_IMPORTED_MODULE_8__.websiteAddress}api/comments`, {\r\n        subjectId,\r\n        ref,\r\n        skip,\r\n      });\r\n      const result = await response.json();\r\n  \r\n      skip += 3;\r\n      \r\n      if (result.items.length) {\r\n        result.items.forEach(comment => {\r\n          listCommentsNode.innerHTML = listCommentsNode.innerHTML + `\r\n            <div class=\"item comment\">\r\n              <div class=\"head\">\r\n                  <a class=\"btn link\" href=\"/profile/view/${comment.author.login}\" title=\"Перейти в профиль пользователя ${comment.author.login}\">${comment.author.login}</a>\r\n                  <!--<div class=\"reactions\">\r\n                      <button class=\"btn active positive\">\r\n                          <span class=\"icon icon-thumbsUp\"></span> 54\r\n                      </button>\r\n                      <button class=\"btn negative\">\r\n                          <span class=\"icon icon-thumbsDown\"></span> 31\r\n                      </button>\r\n                  </div>-->\r\n              </div>\r\n              <div class=\"text\">\r\n                  ${comment.text}\r\n              </div>\r\n              <!--<button class=\"btn link action\">Ответить</button>-->\r\n          </div>\r\n          `;\r\n        })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nif (addReviewFormNode) {\r\n  new _AsyncForm_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\r\n    mainNode: addReviewFormNode,\r\n    successHandler: (params) => {\r\n      const listReviewsNode = document.querySelector('.js-listReviews');\r\n      const userName = listReviewsNode.dataset.userName;\r\n      \r\n      addReviewFormNode.remove();\r\n      \r\n      listReviewsNode.innerHTML = `\r\n        <div class=\"item review\">\r\n          <div class=\"head\">\r\n              <a class=\"btn link userName\" href=\"/profile/view/${userName}\" title=\"Перейти на страницу пользователя ${userName}\">${userName}</a>\r\n          </div>\r\n          <div class=\"grade\">\r\n              <span class=\"icon icon-star${params.eval >= 1 ? 'Fill' : ''}\"></span>\r\n              <span class=\"icon icon-star${params.eval >= 2 ? 'Fill' : ''}\"></span>\r\n              <span class=\"icon icon-star${params.eval >= 3 ? 'Fill' : ''}\"></span>\r\n              <span class=\"icon icon-star${params.eval >= 4 ? 'Fill' : ''}\"></span>\r\n              <span class=\"icon icon-star${params.eval >= 5 ? 'Fill' : ''}\"></span>\r\n          </div>\r\n          <div class=\"text\">\r\n              ${params.text}\r\n          </div>\r\n        </div>` + listReviewsNode.innerHTML;\r\n    }\r\n  })\r\n}\r\n\r\nif (collapseNodes.length) {\r\n  let activeCollapse = null;\r\n  \r\n  collapseNodes.forEach(collapse => {\r\n    collapse.addEventListener('click', (e) => {\r\n      activeCollapse && activeCollapse.classList.remove('active');\r\n      \r\n      if (activeCollapse === collapse) {\r\n        return activeCollapse = null;\r\n      }\r\n  \r\n      collapse.classList.add('active');\r\n      activeCollapse = collapse;\r\n    })\r\n  })\r\n}\r\n\r\nif (cartNode) {\r\n  const products = cartNode.querySelectorAll('.js-product');\r\n  const checkNode = cartNode.querySelector('.js-check');\r\n  const totalPriceToNode = checkNode.querySelector('.js-totalTo');\r\n  const totalPriceFromNode = checkNode.querySelector('.js-totalFrom');\r\n  const totalProductsNode = checkNode.querySelector('.js-totalProducts');\r\n  const payBtnNode = checkNode.querySelector('.js-payBtn');\r\n  const savingNode = checkNode.querySelector('.js-saving');\r\n  let countProducts = products.length;\r\n  let totalPriceToValue = +totalPriceToNode.innerText;\r\n  let totalPriceFromValue = +totalPriceFromNode.innerText;\r\n  let savingValueNode = null;\r\n  let savingValue = null;\r\n  \r\n  if (savingNode) {\r\n    savingValueNode = checkNode.querySelector('.js-savingValue');\r\n    savingValue = +savingValueNode.innerText;\r\n  }\r\n  \r\n  if (payBtnNode) {\r\n    payBtnNode.addEventListener('click', async () => {\r\n      const response = await postman.post('/api/order');\r\n      const result = await response.json();\r\n      \r\n      if (result.error) {\r\n        return;\r\n      }\r\n      \r\n      const payFormNode = cartNode.querySelector('.js-payForm');\r\n      payFormNode.submit();\r\n    })\r\n  }\r\n  \r\n  if (countProducts) {\r\n    products.forEach(productNode => {\r\n      const deleteFromCartBtn = productNode.querySelector('.js-deleteFromCart');\r\n      const dsCartId = document.querySelector('body').dataset.dsCartId;\r\n      const productId = productNode.dataset.productId;\r\n      const dsId = productNode.dataset.dsId;\r\n    \r\n      deleteFromCartBtn.addEventListener('click', async () => {\r\n        if (!dsCartId || !dsId || !productId) {\r\n          return;\r\n        }\r\n        \r\n        let formData = new FormData();\r\n        \r\n        formData.append('cart_uid', dsCartId);\r\n        formData.append('cart_curr', 'RUR');\r\n        formData.append('lang', 'ru-RU');\r\n  \r\n        const responseCartDS = await fetch('https://shop.digiseller.ru/xml/shop_cart_lst.asp', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.urlEncodeFormData)(formData),\r\n        });\r\n  \r\n        const resultCartDS = await responseCartDS.json();\r\n  \r\n        if (!resultCartDS.products) {\r\n          return;\r\n        }\r\n        \r\n        const {item_id} = resultCartDS.products.find(item => item.id === dsId);\r\n  \r\n        formData.append('item_id', item_id);\r\n        formData.append('product_cnt', '0');\r\n  \r\n        let responseUpdateCartDS = await fetch('https://shop.digiseller.ru/xml/shop_cart_lst.asp', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n          body: (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.urlEncodeFormData)(formData),\r\n        });\r\n  \r\n        let resultUpdateCartDS = await responseUpdateCartDS.json();\r\n  \r\n        if (resultUpdateCartDS.cart_err !== '0' && resultUpdateCartDS.cart_err !== '5') {\r\n          return;\r\n        }\r\n        \r\n        const response = await postman.delete(`/api/products/${productId}/cart`);\r\n        const result = await response.json();\r\n      \r\n        if (result.error) {\r\n          return;\r\n        }\r\n  \r\n        countProducts -= 1;\r\n        \r\n        if (countProducts === 0)   {\r\n          return cartNode.innerHTML = '<p style=\"color: #fff\">Вы еще не добавили ни одного товара в корзину покупок</p>';\r\n        }\r\n  \r\n        const priceTo = +productNode.querySelector('.js-priceTo').innerText;\r\n        const priceFrom = +productNode.querySelector('.js-priceFrom').innerText;\r\n  \r\n        totalPriceToValue -= priceTo;\r\n        totalPriceFromValue -= priceFrom;\r\n  \r\n        totalPriceToNode.innerText = totalPriceToValue;\r\n        totalPriceFromNode.innerText = totalPriceFromValue;\r\n        totalProductsNode.innerText = countProducts;\r\n        \r\n        if (savingValue) {\r\n          savingValue -= priceFrom - priceTo;\r\n          \r\n          if (!savingValue) {\r\n            savingNode.remove();\r\n          }\r\n        }\r\n        \r\n        productNode.remove();\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nif (productCards.length) {\r\n  productCards.forEach(productNode => {\r\n    const addToCartBtnNode = productNode.querySelector('.js-addToCart');\r\n    const favoritesBtnNode = productNode.querySelector('.js-favoritesBtn');\r\n    const productId = productNode.dataset.id;\r\n    const dsId = productNode.dataset.dsId;\r\n    let iconFavoritesBtnNode;\r\n    \r\n    if (favoritesBtnNode) {\r\n      iconFavoritesBtnNode = favoritesBtnNode.querySelector('.js-icon');\r\n    }\r\n  \r\n    productNode.addEventListener('click', (e) => {\r\n      if (e.target === iconFavoritesBtnNode || e.target === favoritesBtnNode || e.target === addToCartBtnNode) {\r\n        e.preventDefault();\r\n      }\r\n    })\r\n    \r\n    if (!addToCartBtnNode) {\r\n      return;\r\n    }\r\n    \r\n    if (favoritesBtnNode) {\r\n      favoritesBtnNode.addEventListener('click', async () => {\r\n        if (favoritesBtnNode.classList.contains('js-active')) {\r\n          const response = await postman.delete(`/api/products/${productId}/favorites`);\r\n          const result = await response.json();\r\n      \r\n          if (result.error) {\r\n            return;\r\n          }\r\n      \r\n          favoritesBtnNode.setAttribute('title', 'Добавить игру в избранное');\r\n          favoritesBtnNode.classList.remove('js-active');\r\n          iconFavoritesBtnNode.classList.remove('active');\r\n          return;\r\n        }\r\n    \r\n        const response = await postman.post(`/api/products/${productId}/favorites`);\r\n        const result = await response.json();\r\n    \r\n        if (result.error) {\r\n          return;\r\n        }\r\n    \r\n        favoritesBtnNode.setAttribute('title', 'Удалить игру из избранного');\r\n        favoritesBtnNode.classList.add('js-active');\r\n        iconFavoritesBtnNode.classList.add('active');\r\n      })\r\n    }\r\n  \r\n    addToCartBtnNode.addEventListener('click', async () => {\r\n      if (addToCartBtnNode.classList.contains('js-active')) {\r\n        window.location.href = '/cart';\r\n        return;\r\n      }\r\n  \r\n      const dsCartId = document.querySelector('body').dataset.dsCartId;\r\n      const formData = new FormData();\r\n  \r\n      formData.append('product_id', dsId);\r\n      formData.append('product_cnt', '1');\r\n      formData.append('typecurr', 'wmr');\r\n      formData.append('lang', 'ru-RU');\r\n      \r\n      if (dsCartId) {\r\n        formData.append('cart_uid', dsCartId);\r\n      }\r\n  \r\n      const responseAddCartDS = await fetch('https://shop.digiseller.ru/xml/shop_cart_add.asp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.urlEncodeFormData)(formData),\r\n      });\r\n  \r\n      const resultAddCartDS = await responseAddCartDS.json();\r\n  \r\n      if (resultAddCartDS.cart_err_num !== '0') {\r\n        return;\r\n      }\r\n  \r\n      const response = await postman.post(`/api/products/${productId}/cart`, {dsCartId: resultAddCartDS.cart_uid});\r\n      const result = await response.json();\r\n  \r\n      if (result.error) {\r\n        return;\r\n      }\r\n  \r\n      if (!dsCartId) {\r\n        document.querySelector('body').dataset.dsCartId = resultAddCartDS.cart_uid;\r\n      }\r\n      \r\n      addToCartBtnNode.innerText = 'В корзине ✔';\r\n      addToCartBtnNode.classList.add('js-active', 'active');\r\n      addToCartBtnNode.setAttribute('title', 'Перейти в корзину покупок');\r\n    })\r\n  })\r\n}\r\n\r\nsearchStringNode.addEventListener('input', async () => {\r\n  popupController.activateById('navigate');\r\n  \r\n  const response = await postman.get(`${_config_js__WEBPACK_IMPORTED_MODULE_8__.websiteAddress}api/products`, {searchString: searchStringNode.value});\r\n  const result = await response.json();\r\n  const menuNode = document.querySelector('.js-menu');\r\n  const searchResultNode = document.querySelector('.js-searchResult');\r\n  \r\n  if (result.error) {\r\n    return;\r\n  }\r\n  \r\n  menuNode.classList.add('activeSearchResult');\r\n  \r\n  if (result.products?.length === 0) {\r\n    return searchResultNode.innerHTML = '<p style=\"color: #fff\">Ни чего не найдено</p>';\r\n  }\r\n  \r\n  searchResultNode.innerHTML = '';\r\n  \r\n  result.products.forEach(product => {\r\n    searchResultNode.innerHTML += `\r\n      <a href=\"/games/${product.alias}\" class=\"cardGame\" title=\"Перейти к странице игры\">\r\n        <div class=\"actions\">\r\n            <button class=\"btn like\" title=\"Добавить игру в избранное\">\r\n                <span class=\"icon-static icon-static-actionLike\"></span>\r\n            </button>\r\n            <button\r\n                class=\"btn border rounded uppercase bg-darkPink hover-bg-pink inCart small\"\r\n                title=\"Добавить данный товар в корзину покупок\"\r\n            >\r\n                В корзину\r\n            </button>\r\n        </div>\r\n        <div class=\"head\">\r\n            <img class=\"img\" src=\"${_config_js__WEBPACK_IMPORTED_MODULE_8__.websiteAddress}${product.img}\" alt=\"Картинка ${product.name}\" title=\"${product.name}\">\r\n            <div class=\"name\">\r\n                ${product.name}\r\n            </div>\r\n        </div>\r\n        <div class=\"price\">\r\n            <div class=\"toPrice\">\r\n                <span class=\"value\">\r\n                    ${product.priceTo}\r\n                </span>\r\n            </div>\r\n            <div class=\"fromPrice\">\r\n                <span class=\"value\">\r\n                    ${product.priceFrom}\r\n                </span>\r\n            </div>\r\n        </div>\r\n      </a>\r\n    `;\r\n  });\r\n})\r\n\r\nif (copyBtnNode) {\r\n  copyBtnNode.addEventListener('click', () => {\r\n    const copyTextNode = document.querySelector('.js-copyText');\r\n    const copyNodeContentsToClipboard = (el) => {\r\n      const range = document.createRange();\r\n      const selection = window.getSelection();\r\n      range.selectNodeContents(el);\r\n      selection.removeAllRanges();\r\n      selection.addRange(range);\r\n      document.execCommand('copy');\r\n      selection.removeAllRanges();\r\n    }\r\n    const copyToClipboard = (el) => {\r\n      const oldContentEditable = el.contentEditable;\r\n      const oldReadOnly = el.readOnly;\r\n      try {\r\n        el.contentEditable = 'true'; //  специально для iOS\r\n        el.readOnly = false;\r\n        copyNodeContentsToClipboard(el);\r\n      } finally {\r\n        el.contentEditable = oldContentEditable;\r\n        el.readOnly = oldReadOnly;\r\n      }\r\n    }\r\n    \r\n    try {\r\n      if (navigator.clipboard) {\r\n        navigator.clipboard.writeText(copyTextNode.innerText);\r\n      } else if (window.clipboardData) {\r\n        window.clipboardData.setData('text', copyTextNode.innerText); // для Internet Explorer\r\n      } else {\r\n        copyToClipboard(copyTextNode); // для других браузеров, iOS, Mac OS\r\n      }\r\n      //Вывод инфы об успешном копировании\r\n    } catch (e) {\r\n      //Вывод инфы о неудавшемся копировании\r\n    }\r\n  })\r\n}\r\n\r\nif (scrollerNode) {\r\n  scrollerNode.addEventListener('click', () => {\r\n    const targetSelector = `.js-${scrollerNode.dataset.target}`;\r\n    const topOffset = document.querySelector('.js-header').offsetHeight;\r\n    const targetPosition = document.querySelector(targetSelector).getBoundingClientRect().top;\r\n    const offsetPosition = targetPosition - topOffset;\r\n    \r\n    window.scrollBy({\r\n      top: offsetPosition,\r\n      behavior: 'smooth'\r\n    });\r\n  });\r\n}\r\n\r\nif (likeArticleNode) {\r\n  likeArticleNode.addEventListener('click', async () => {\r\n    const countLikesNode = document.querySelector('.js-countLikes');\r\n    const articleId = likeArticleNode.dataset.target;\r\n    const response = await postman.post('/api/articles/like', {articleId});\r\n    const result = await response.json();\r\n    \r\n    if (!result.error) {\r\n      countLikesNode.innerText = result.countLikes;\r\n    }\r\n  })\r\n}\r\n\r\n/*if (homeSliderNode) {\r\n  let playVideoTimeOutId;\r\n  \r\n  const homeSlider = new Slider({\r\n    mainNode: homeSliderNode,\r\n    onSwitch: switchHomeSlider,\r\n    progress: true,\r\n    navigate: true,\r\n    switchingTime: 3000,\r\n  });\r\n  \r\n  function switchHomeSlider(slides, prevSlides = []) {\r\n    clearTimeout(playVideoTimeOutId);\r\n    const slideNode = slides[0];\r\n    const prevSlideNode = prevSlides[0];\r\n    const videoName = slideNode.dataset.videoName;\r\n    const videoNode = slideNode.querySelector('.video');\r\n    let canplaythrough = true;\r\n    \r\n    if (slideNode === prevSlideNode) {\r\n      return;\r\n    }\r\n    \r\n    const onCanplaythrough = () => {\r\n      if (!canplaythrough) {\r\n        return;\r\n      }\r\n      \r\n      playVideoTimeOutId = setTimeout(() => {\r\n        slideNode.classList.add('activeVideo');\r\n        homeSlider.changeTimeoutOnce(videoNode.duration * 1000);\r\n        videoNode.play();\r\n      }, 2000);\r\n      \r\n      canplaythrough = false;\r\n    }\r\n    \r\n    if (prevSlideNode) {\r\n      const prevSlideVideoNode = prevSlideNode.querySelector('.video');\r\n      \r\n      prevSlideNode.classList.remove('activeVideo');\r\n      prevSlideVideoNode.removeAttribute('src');\r\n      prevSlideVideoNode.removeEventListener('canplaythrough', onCanplaythrough);\r\n    }\r\n    \r\n    videoNode.addEventListener('canplaythrough', onCanplaythrough);\r\n    videoNode.setAttribute('src',`${Config.websiteAddress}${videoName}`);\r\n  }\r\n}*/\r\n\r\nif (homeCatalogTabsNode) {\r\n  new _Tabs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n    mainNode: homeCatalogTabsNode,\r\n  });\r\n}\r\n\r\nif (genresSliderNode) {\r\n  new _Slider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    mainNode: genresSliderNode,\r\n    progress: true,\r\n    isTrack: true,\r\n    isVertical: true,\r\n    countSlidesScroll: 2,\r\n    switchingTime: 1000000,\r\n  });\r\n}\r\n\r\nif (gameGallerySliderNode) {\r\n  new _Slider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    mainNode: gameGallerySliderNode,\r\n    isTrack: true,\r\n    countSlidesScroll: 2,\r\n    switchingTime: 1000000,\r\n  });\r\n}\r\n\r\nif (gameInfoTabsNode) {\r\n  new _Tabs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n    mainNode: gameInfoTabsNode,\r\n  });\r\n}\r\n\r\nif (feedbackProductTabsNode) {\r\n  new _Tabs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n    mainNode: feedbackProductTabsNode,\r\n  });\r\n}\r\n\r\nif (youtubePlayNodes.length) {\r\n  youtubePlayNodes.forEach(item => {\r\n    item.addEventListener('click', () => {\r\n      const videoId = item.dataset.link;\r\n      const iframe = document.createElement('iframe');\r\n      \r\n      iframe.style.width = '100%';\r\n      iframe.style.height = '100%';\r\n      iframe.setAttribute('src', `https://www.youtube-nocookie.com/embed/${videoId}?autoplay=1`);\r\n      iframe.setAttribute('frameBorder', '0');\r\n      iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');\r\n      iframe.setAttribute('allowFullScreen', '');\r\n\r\n      new _Modal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](iframe);\r\n    })\r\n  })\r\n}\r\n\r\nif (catalogNode) {\r\n  const filterNode = catalogNode.querySelector('.js-filter');\r\n  const sortNode = catalogNode.querySelector('.js-sort');\r\n  const rangePriceNode = catalogNode.querySelector('.js-priceRange');\r\n  const loadMoreNode = catalogNode.querySelector('.js-loadMore');\r\n  const fields = [];\r\n  let sortActiveBtn = null;\r\n  \r\n  const checkbox = [\r\n    ...filterNode.querySelectorAll('.js-checkbox'),\r\n    ...sortNode.querySelectorAll('.js-checkbox'),\r\n  ];\r\n  const sortBtnNodes = sortNode.querySelectorAll('.js-variant-sort');\r\n  const rangePriceSliderNodes = rangePriceNode.querySelectorAll('.js-slider');\r\n  \r\n  rangePriceSliderNodes.forEach(rangePriceSliderNode => {\r\n    const name = rangePriceSliderNode.dataset.name;\r\n    \r\n    rangePriceSliderNode.addEventListener('initialSlider', () => {\r\n      const url = new URL(window.location.href);\r\n      const value = rangePriceSliderNode.innerText;\r\n      \r\n      url.searchParams.set(name, value);\r\n      history.pushState(null, null, url);\r\n      catalogNode.dispatchEvent(new Event('changeParams'));\r\n    })\r\n  \r\n    fields.push({\r\n      name,\r\n      node: rangePriceSliderNode,\r\n      type: 'contentEditable',\r\n      dispatch: true,\r\n      event: 'startInitial',\r\n    });\r\n  })\r\n  \r\n  sortBtnNodes.forEach(sortBtnNode => {\r\n    const value = sortBtnNode.dataset.sort;\r\n    \r\n    sortBtnNode.addEventListener('click', () => {\r\n      const url = new URL(window.location.href);\r\n      \r\n      if (sortActiveBtn !== sortBtnNode) {\r\n        url.searchParams.set('sort', value);\r\n        sortBtnNode.classList.add('active');\r\n        sortActiveBtn && sortActiveBtn.classList.remove('active');\r\n        sortActiveBtn = sortBtnNode;\r\n      } else {\r\n        sortActiveBtn = null;\r\n        sortBtnNode.classList.remove('active');\r\n        url.searchParams.delete('sort');\r\n      }\r\n  \r\n      history.pushState(null, null, url);\r\n      catalogNode.dispatchEvent(new Event('changeParams'));\r\n    })\r\n  \r\n    fields.push({\r\n      name: 'sort',\r\n      value,\r\n      fixValue: true,\r\n      node: sortBtnNode,\r\n      dispatch: true,\r\n      event: 'click',\r\n    });\r\n  })\r\n  \r\n  checkbox.forEach(item => {\r\n    const input = item.querySelector('.input');\r\n    const inputName = input.name;\r\n    const inputValue = input.value;\r\n    \r\n    input.addEventListener('click', (e) => {\r\n      const url = new URL(window.location.href);\r\n      \r\n      if (input.checked) {\r\n        url.searchParams.append(inputName, inputValue);\r\n      } else {\r\n        const entriesParams = [...url.searchParams.entries()];\r\n      \r\n        for (item of entriesParams) {\r\n          url.searchParams.delete(item[0]);\r\n        }\r\n      \r\n        for (item of entriesParams) {\r\n          if (item[1] === inputValue) {\r\n            continue;\r\n          }\r\n        \r\n          url.searchParams.append(item[0], item[1]);\r\n        }\r\n      }\r\n    \r\n      history.pushState(null, null, url);\r\n      catalogNode.dispatchEvent(new Event('changeParams'));\r\n    });\r\n    \r\n    fields.push({\r\n      name: inputName,\r\n      value: inputValue,\r\n      fixValue: true,\r\n      node: input,\r\n      type: 'checkbox',\r\n    });\r\n  })\r\n  \r\n  const url = new URL(window.location.href);\r\n  const entriesSearchParams = [...url.searchParams.entries()];\r\n  \r\n  entriesSearchParams.forEach(searchParam => {\r\n    const field = fields.find(field => {\r\n      if (field.fixValue) {\r\n        return field.name === searchParam[0] && field.value === searchParam[1];\r\n      }\r\n  \r\n      return field.name === searchParam[0];\r\n    });\r\n    \r\n    if (!field) {\r\n      return;\r\n    }\r\n    \r\n    switch (field.type) {\r\n      case 'checkbox': {\r\n        field.node.checked = true;\r\n        break;\r\n      }\r\n      case 'contentEditable': {\r\n        field.node.innerText = searchParam[1];\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if (field.dispatch) {\r\n      field.node.dispatchEvent(new Event(field.event));\r\n    }\r\n  \r\n    let param = {\r\n      name: searchParam[0],\r\n      value: searchParam[1],\r\n    };\r\n    \r\n    switch (field.type) {\r\n      case 'checkbox': {\r\n        param.value = field.node.value;\r\n        break;\r\n      }\r\n      case 'contentEditable': {\r\n        param.value = field.node.innerText;\r\n        break;\r\n      }\r\n    }\r\n  })\r\n  \r\n  catalogNode.addEventListener('changeParams', async () => {\r\n    const url = new URL(window.location.href);\r\n    const response = await postman.get(`${_config_js__WEBPACK_IMPORTED_MODULE_8__.websiteAddress}api/products${url.search}`);\r\n    const result = await response.json();\r\n    const productGridNode = catalogNode.querySelector('.js-productGrid');\r\n    productGridNode.innerHTML = '';\r\n    \r\n    result.products.forEach(product => {\r\n      productGridNode.innerHTML += `\r\n        <a\r\n            href=\"/games/${product.alias}\"\r\n            class=\"cardGame js-cardGame\"\r\n            data-id=\"${product._id}\"\r\n            data-ds-id=\"${product.dsId}\"\r\n            title=\"Перейти к странице игры\"\r\n        >\r\n            <div class=\"actions\">\r\n                <!--{{#if @root.isAuth}}\r\n                    <button class=\"btn like js-favoritesBtn{{#if inFavorites}} js-active{{/if}}\" title=\"{{#if inFavorites}}Удалить игру из избранного{{else}}Добавить игру в избранное{{/if}}\">\r\n                        <span class=\"icon-static icon-static-actionLike js-icon {{#if inFavorites}} active{{/if}}\"></span>\r\n                    </button>\r\n                {{/if}}-->\r\n                <button\r\n                    class=\"btn border rounded uppercase bg-darkPink hover-bg-pink inCart small js-addToCart{{#if inCart}} active js-active{{/if}}\"\r\n                    title=\"{{#if inCart}}Перейти в корзину покупок{{else}}Добавить данный товар в корзину покупок{{/if}}\"\r\n                >\r\n                    <!--{{#if inCart}}В корзине ✔{{else}}-->В корзину<!--{{/if}}-->\r\n                </button>\r\n            </div>\r\n            <div class=\"head\">\r\n                <img class=\"img\" src=\"${_config_js__WEBPACK_IMPORTED_MODULE_8__.websiteAddress}${product.img}\" alt=\"Картинка ${product.name}\" title=\"${product.name}\">\r\n                <div class=\"name\">\r\n                    ${product.name}\r\n                </div>\r\n            </div>\r\n            <div class=\"price\">\r\n                <div class=\"toPrice\">\r\n                    <span class=\"value\">\r\n                        ${product.priceTo}\r\n                    </span>\r\n                </div>\r\n                <div class=\"fromPrice\">\r\n                    <span class=\"value\">\r\n                        ${product.priceFrom}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </a>\r\n      `\r\n    });\r\n  })\r\n  \r\n  catalogNode.dispatchEvent(new Event('changeParams'));\r\n}\r\n\r\nif (loginFormNode && btnSwitchAuthNode && btnSwitchRegNode && submitLoginNode) {\r\n  btnSwitchAuthNode.addEventListener('click', () => {\r\n    btnSwitchAuthNode.classList.add('active');\r\n    btnSwitchRegNode.classList.remove('active');\r\n    loginFormNode.classList.add('auth');\r\n    loginFormNode.action = '/auth';\r\n    submitLoginNode.innerText = 'Войти';\r\n  });\r\n  \r\n  btnSwitchRegNode.addEventListener('click', () => {\r\n    btnSwitchRegNode.classList.add('active');\r\n    btnSwitchAuthNode.classList.remove('active');\r\n    loginFormNode.classList.remove('auth');\r\n    loginFormNode.action = '/reg';\r\n    submitLoginNode.innerText = 'Далее';\r\n  });\r\n}\r\n\r\nif (inputLabelInFieldNodes.length) {\r\n  inputLabelInFieldNodes.forEach(item => {\r\n    item.querySelector('input').addEventListener('blur', (e) => {\r\n      e.target.value.length ? e.target.classList.add('active') : e.target.classList.remove('active');\r\n    })\r\n  })\r\n}\r\n\r\nif (loginFormNode) {\r\n  new _AsyncForm_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\r\n    mainNode: loginFormNode,\r\n    successHandler: () => {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1500)\r\n    },\r\n  });\r\n}\r\n\r\nif (profileEditFormNode) {\r\n  new _AsyncForm_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\r\n    mainNode: profileEditFormNode,\r\n  })\r\n}\r\n\r\nif (promptNodes.length) {\r\n  promptNodes.forEach(item => new _Prompt_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({mainNode: item}));\r\n}\n\n//# sourceURL=webpack:///./js/index.js?");

/***/ }),

/***/ "./js/utils.js":
/*!*********************!*\
  !*** ./js/utils.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"urlEncodeFormData\": () => (/* binding */ urlEncodeFormData)\n/* harmony export */ });\nconst urlEncodeFormData = (fd) => {\r\n  let s = '';\r\n  \r\n  function encode(s) {\r\n    return encodeURIComponent(s).replace(/%20/g,'+');\r\n  }\r\n  \r\n  for (let pair of fd.entries()) {\r\n    if (typeof pair[1]=='string') {\r\n      s += (s?'&':'') + encode(pair[0])+'='+encode(pair[1]);\r\n    }\r\n  }\r\n  \r\n  return s;\r\n}\n\n//# sourceURL=webpack:///./js/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./js/index.js");
/******/ 	
/******/ })()
;